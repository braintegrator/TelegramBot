import os
import random
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.types.input_file import FSInputFile
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()
bot = Bot(token=os.getenv("BOT_TOKEN"))
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
kb_builder = ReplyKeyboardBuilder()
kb_builder.add(
    KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
    KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ"),
    KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É"),
)
kb_builder.adjust(1)
reply_kb = kb_builder.as_markup(resize_keyboard=True, is_persistent=True)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏
def get_random_file(folder):
    try:
        files = os.listdir(folder) if os.path.exists(folder) else []
        return random.choice(files) if files else None
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∏–∑ –ø–∞–ø–∫–∏ {folder}: {e}")
        return None


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Ü–∏—Ç–∞—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞ quotes.txt
def get_random_quote():
    try:
        with open("quotes.txt", "r", encoding="utf-8") as f:
            quotes = f.read().splitlines()
        return random.choice(quotes) if quotes else None
    except FileNotFoundError:
        logging.error("–§–∞–π–ª quotes.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ quotes.txt: {e}")
        return None


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø PositiveInputsBot. –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å:",
        reply_markup=reply_kb,
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è "–ü–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
@dp.message(F.text == "–ü–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
async def send_image(message: Message):
    if file := get_random_file("images"):
        await message.answer_photo(FSInputFile(f"images/{file}"))
    else:
        await message.answer("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è "–ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ"
@dp.message(F.text == "–ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ")
async def send_video(message: Message):
    if file := get_random_file("videos"):
        await message.answer_video(FSInputFile(f"videos/{file}"))
    else:
        await message.answer("–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è "–ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É"
@dp.message(F.text == "–ü–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É")
async def send_quote(message: Message):
    if quote := get_random_quote():
        await message.answer(f"üí° {quote}")
    else:
        await message.answer("–¶–∏—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
@dp.message(Command("about"))
async def about(message: Message):
    await message.answer(
        "–ë–æ—Ç —Å–æ–∑–¥–∞–Ω [Begemot](https://t.me/photon_of_freedom)\n"
        "[hfwddm@gmail.com](mailto:hfwddm@gmail.com)\n"
        "–ü—Ä–∏ —É—á–∞—Å—Ç–∏–∏ –ø–æ–º–æ—â–Ω–∏–∫–∞-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ Qwen –æ—Ç Alibaba Cloud"
    )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    dp.run_polling(bot)
